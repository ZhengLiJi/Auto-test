{"name": "test_fas_pay[data12]", "status": "broken", "statusDetails": {"message": "TypeError: setup() missing 6 required positional arguments: 'productId', 'currency', 'amount', 'payerPhone', 'payChannel', and 'privateKey'", "trace": "cls = <class '_pytest.runner.CallInfo'>\nfunc = <function call_runtest_hook.<locals>.<lambda> at 0x000001D7E68F4940>\nwhen = 'setup'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: \"Callable[[], TResult]\",\n        when: \"Literal['collect', 'setup', 'call', 'teardown']\",\n        reraise: Optional[\n            Union[Type[BaseException], Tuple[Type[BaseException], ...]]\n        ] = None,\n    ) -> \"CallInfo[TResult]\":\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: Optional[TResult] = func()\n\nD:\\python\\lib\\site-packages\\_pytest\\runner.py:338: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\python\\lib\\site-packages\\_pytest\\runner.py:259: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\nD:\\python\\lib\\site-packages\\pluggy\\_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\nD:\\python\\lib\\site-packages\\pluggy\\_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\nD:\\python\\lib\\site-packages\\_pytest\\runner.py:154: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\nD:\\python\\lib\\site-packages\\_pytest\\runner.py:494: in setup\n    raise exc\nD:\\python\\lib\\site-packages\\_pytest\\runner.py:491: in setup\n    col.setup()\nD:\\python\\lib\\site-packages\\_pytest\\python.py:1764: in setup\n    self._request._fillfixtures()\nD:\\python\\lib\\site-packages\\_pytest\\fixtures.py:541: in _fillfixtures\n    item.funcargs[argname] = self.getfixturevalue(argname)\nD:\\python\\lib\\site-packages\\_pytest\\fixtures.py:554: in getfixturevalue\n    fixturedef = self._get_active_fixturedef(argname)\nD:\\python\\lib\\site-packages\\_pytest\\fixtures.py:573: in _get_active_fixturedef\n    self._compute_fixture_value(fixturedef)\nD:\\python\\lib\\site-packages\\_pytest\\fixtures.py:659: in _compute_fixture_value\n    fixturedef.execute(request=subrequest)\nD:\\python\\lib\\site-packages\\_pytest\\fixtures.py:1057: in execute\n    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)\nD:\\python\\lib\\site-packages\\pluggy\\_hooks.py:265: in __call__\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\nD:\\python\\lib\\site-packages\\pluggy\\_manager.py:80: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\nD:\\python\\lib\\site-packages\\_pytest\\fixtures.py:1111: in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\nD:\\python\\lib\\site-packages\\_pytest\\fixtures.py:883: in call_fixture_func\n    fixture_result = next(generator)\nD:\\python\\lib\\site-packages\\_pytest\\python.py:893: in xunit_setup_method_fixture\n    _call_with_optional_argument(func, method)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfunc = <bound method CreateOrder.setup of <case.test_fas_pay.TestFaspay object at 0x000001D7E5F5A580>>\narg = <bound method TestFaspay.test_fas_pay of <case.test_fas_pay.TestFaspay object at 0x000001D7E5F5A580>>\n\n    def _call_with_optional_argument(func, arg) -> None:\n        \"\"\"Call the given function with the given argument if func accepts one argument, otherwise\n        calls func without arguments.\"\"\"\n        arg_count = func.__code__.co_argcount\n        if inspect.ismethod(func):\n            arg_count -= 1\n        if arg_count:\n>           func(arg)\nE           TypeError: setup() missing 6 required positional arguments: 'productId', 'currency', 'amount', 'payerPhone', 'payChannel', and 'privateKey'\n\nD:\\python\\lib\\site-packages\\_pytest\\python.py:776: TypeError"}, "parameters": [{"name": "data", "value": "{'data': {'merchantId': '100119', 'productId': '2023', 'currency': 'IDR', 'amount': '10000', 'payerPhone': '0888888881', 'payChannel': '19', 'privateKey': '97fa79f073c7c5e3c97b00b50b156eaa'}, 'result': 'success'}"}], "start": 1709115825368, "stop": 1709115825368, "uuid": "31b317c6-c029-43bb-b7f2-2f923ef740e5", "historyId": "438cdb9aa0a052d3a5ff12481fd51110", "testCaseId": "74c4093c0eeb21174e763c21213d0067", "fullName": "case.test_fas_pay.TestFaspay#test_fas_pay", "labels": [{"name": "parentSuite", "value": "case"}, {"name": "suite", "value": "test_fas_pay"}, {"name": "subSuite", "value": "TestFaspay"}, {"name": "host", "value": "LAPTOP-QH40KOLE"}, {"name": "thread", "value": "22288-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "case.test_fas_pay"}]}